{"version":3,"file":"createComponent.js","sourceRoot":"","sources":["../src/createComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,WAAW,CAAC;AAEjC,OAAO,EACL,gBAAgB,EAChB,gBAAgB,EAChB,gBAAgB,EAChB,gBAAgB,GACjB,MAAM,SAAS,CAAC;AAgBjB,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAClC,OAAe,EACf,EAAE;IACF,MAAM,WAAW,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAC9C,MAAM,cAAc,GAAG,KAAM,SAAQ,KAAK,CAAC,SAE1C;QACC,YAAY,KAAsC;YAChD,KAAK,CAAC,KAAK,CAAC,CAAC;QACf,CAAC;QAED,iBAAiB;YACf,MAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAgB,CAAC;YACvD,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC;QAED,kBAAkB,CAAC,SAA0C;YAC3D,IAAI,SAAS,KAAK,IAAI,CAAC,KAAK,EAAE;gBAC5B,MAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAgB,CAAC;gBACvD,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;aAC/C;QACH,CAAC;QAED,MAAM;YACJ,MAAM,KAOF,IAAI,CAAC,KAAK,EAPR,EACJ,QAAQ,EACR,YAAY,EACZ,KAAK,EACL,SAAS,EACT,GAAG,OAES,EADT,MAAM,cANL,yDAOL,CAAa,CAAC;YAEf,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;gBAC3D,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE;oBACjE,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;oBAClD,IAAI,gBAAgB,CAAC,SAAS,CAAC,EAAE;wBAC9B,GAAW,CAAC,IAAI,CAAC,GAAI,MAAc,CAAC,IAAI,CAAC,CAAC;qBAC5C;iBACF;gBACD,OAAO,GAAG,CAAC;YACb,CAAC,EAAE,EAAE,CAAC,CAAC;YAEP,MAAM,QAAQ,mCACT,WAAW,KACd,GAAG,EAAE,YAAY,EACjB,KAAK,GACN,CAAC;YAEF,OAAO,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC1D,CAAC;QAED,MAAM,KAAK,WAAW;YACpB,OAAO,WAAW,CAAC;QACrB,CAAC;KACF,CAAC;IACF,OAAO,gBAAgB,CACrB,cAAc,EACd,WAAW,CACZ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport {\n  attachEventProps,\n  createForwardRef,\n  dashToPascalCase,\n  isCoveredByReact,\n} from \"./utils\";\n\nexport interface ReactProps {\n  className?: string;\n}\n\ninterface ReactInternalProps<ElementType> {\n  forwardedRef?: React.Ref<ElementType>;\n  children?: React.ReactNode;\n  href?: string;\n  target?: string;\n  style?: string;\n  ref?: React.Ref<any>;\n  className?: string;\n}\n\nexport const createReactComponent = <PropType, ElementType>(\n  tagName: string\n) => {\n  const displayName = dashToPascalCase(tagName);\n  const ReactComponent = class extends React.Component<\n    ReactInternalProps<ElementType>\n  > {\n    constructor(props: ReactInternalProps<ElementType>) {\n      super(props);\n    }\n\n    componentDidMount() {\n      const node = ReactDom.findDOMNode(this) as HTMLElement;\n      attachEventProps(node, this.props, this.props);\n    }\n\n    componentDidUpdate(prevProps: ReactInternalProps<ElementType>) {\n      if (prevProps !== this.props) {\n        const node = ReactDom.findDOMNode(this) as HTMLElement;\n        attachEventProps(node, this.props, prevProps);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        forwardedRef,\n        style,\n        className,\n        ref,\n        ...cProps\n      } = this.props;\n\n      const propsToPass = Object.keys(cProps).reduce((acc, name) => {\n        if (name.indexOf(\"on\") === 0 && name[2] === name[2].toUpperCase()) {\n          const eventName = name.substring(2).toLowerCase();\n          if (isCoveredByReact(eventName)) {\n            (acc as any)[name] = (cProps as any)[name];\n          }\n        }\n        return acc;\n      }, {});\n\n      const newProps: any = {\n        ...propsToPass,\n        ref: forwardedRef,\n        style,\n      };\n\n      return React.createElement(tagName, newProps, children);\n    }\n\n    static get displayName() {\n      return displayName;\n    }\n  };\n  return createForwardRef<PropType & ReactProps, ElementType>(\n    ReactComponent,\n    displayName\n  );\n};\n"]}